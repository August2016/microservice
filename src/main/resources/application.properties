spring.profiles.active=pro
spring.mvc.static-path-pattern=/static/**


#主数据源
first.spring.datasource.url = jdbc:mysql://localhost:3306/booking?useUnicode=true&characterEncoding=utf-8&useSSL=false
first.spring.datasource.username = root
first.spring.datasource.password = wuzuquan
first.spring.datasource.driver-class-name = com.mysql.jdbc.Driver
first.spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
first.spring.datasource.initialSize=5
#最小空闲连接数
first.spring.datasource.minIdle=2
first.spring.datasource.maxActive=20
# 等待超时的时间，单位毫秒
first.spring.datasource.maxWait=20000
#dbserver有闲置连接的超时时间。所以在使用长时间空闲连接之前，进行ping操作，确保是有效的连接
#first.spring.datasource.poolPingEnabled=true
#first.spring.datasource.poolPingQuery=select 1 from dual
#闲置时间超过某个时间的连接，进行ping,单位毫秒
#first.spring.datasource.poolPingConnectionsNotUsedFor=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
first.spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
first.spring.datasource.minEvictableIdleTimeMillis=300000
#检查连接是否有效，申请连接的时候检查空闲连接
first.spring.datasource.validationQuery=SELECT 1 FROM DUAL
first.spring.datasource.testWhileIdle=true
first.spring.datasource.testOnBorrow=false
first.spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
first.spring.datasource.poolPreparedStatements=true
first.spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
first.spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
first.spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true



#第二数据源
framedb.spring.datasource.url = jdbc:oracle:thin:@192.168.84.235:1521:x64devdb
framedb.spring.datasource.username = itfw_app
framedb.spring.datasource.password = itiu0pk
framedb.spring.datasource.driver-class-name = oracle.jdbc.OracleDriver
framedb.spring.datasource.type=com.alibaba.druid.pool.DruidDataSource



com.xmair.auth.name=xxx
info.app.encoding=UTF-8
info.app.java.source=1.8
info.app.java.target=1.8

#定义监控相对路径
management.context-path=/actuator
management.security.enabled=false
#sba
spring.application.name=svc-monitor
spring.boot.admin.context-path=/sba
spring.boot.admin.url=http://localhost:9999/sba


#rabbitmq配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=11.4.76.103
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=wuzuquan
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=40
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接池心跳检查
spring.redis.pool.tcp-keepalive=60
# 连接超时时间（毫秒）
spring.redis.timeout=300000
#做有效性检查,空闲超时的链接会被删除
spring.redis.pool.testWhileIdel=true


#jackson日期序列化自定义格式
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.default-property-inclusion= non_null

#sql日志打印
logging.level.com.xmair.oauth.mapper.framedb = debug