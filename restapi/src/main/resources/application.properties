spring.profiles.active=dev

#server
server.port=8080
#debug=enabled

com.xmair.auth.name=xxx
info.app.encoding=UTF-8
info.app.java.source=1.8
info.app.java.target=1.8


#是否启用服务器压缩
server.compression.enabled=true

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

#sql日志打印
logging.level.com.xmair.core.mapper.framedb = debug
logging.level.com.xmair.core.mapper.test1 = debug

#mappers 多个接口时逗号隔开
mapper.mappers=tk.mybatis.mapper.common.Mapper
mapper.not-empty=false

# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
server.undertow.io-threads=8
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
server.undertow.worker-threads=4000
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true

spring.application.name=api-test

#spring cloud 相关配置
#ribbon客户端负载重试配置
spring.cloud.loadbalancer.retry.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000

api-test.ribbon.ConnectTimeout=250
api-test.ribbon.ReadTimeout=1000
api-test.ribbon.OkToRetryOnAllOperations=true
api-test.ribbon.MaxAutoRetriesNextServer=2
api-test.ribbon.MaxAutoRetries=1




