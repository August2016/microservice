package ${modelPackage};
import javax.persistence.*;
import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.Length;
#if (${hasDate})
import java.util.Date;
#end

#if (${hasBigdecimal})

import java.math.BigDecimal;
#end

/**
 * <p>
 * 
 *${remark}
 *
 * </p>
 * 
 * @author ${author}
 * @date ${dateTime}
 * @version
 */
@Table(name = "${tableName}")
public class ${beanName} implements Serializable {
#foreach ($item in $columns)

#if (${item.remark} && ${item.remark}!='' )
     /**
     * ${item.remark}
     */
#end


#if ( ${item.type} == "String" )
    @Length(max=${item.maxLength},message="${item.column} 长度不能超过${item.maxLength}")
#end
#if ( ${item.allowNull} == false )
    @NotNull(message = "${item.column} not allow null")
#end
#foreach(${key} in ${primaryKeys})
#if ( ${item.column} == ${key} )
    @Id
#break
#end
#end
    @Column(name = "${item.column}")
	private ${item.type} ${item.lowerProperty};
	#end

	#foreach ($item in $columns)
	
	public ${item.type} get${item.property}() {
        return ${item.lowerProperty};
    }

	public void set${item.property}(${item.type} ${item.lowerProperty}) {
    	 this.${item.lowerProperty} = ${item.lowerProperty};
	}
	#end
}